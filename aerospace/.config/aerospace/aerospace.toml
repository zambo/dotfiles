start-at-login = true                                # 'start-at-login' needs to be 'true' for 'after-login-command' to work
after-login-command = []
after-startup-command = ['exec-and-forget borders']
on-focus-changed = ['move-mouse window-lazy-center']

enable-normalization-flatten-containers = true                         # Normalizations. See:https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-opposite-orientation-for-nested-containers = true

accordion-padding = 64
default-root-container-layout = 'tiles'
default-root-container-orientation = 'vertical'                 # Possible values: horizontal|vertical|auto
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 16
inner.vertical = 16
outer.left = 4
outer.bottom = 6
outer.top = [{ monitor."LG HDR 4K" = 6 }, { monitor."Sidecar Display" = 6 }, 6]
outer.right = 4

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 22, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift
# All possible commands: https://nikitabobko.github.io/AeroSpace/commands
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut
# (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'

[mode.main.binding]
alt-enter = 'fullscreen --no-outer-gaps'
alt-ctrl-semicolon = 'mode leader'
# cmd-ctrl-tab = 'move-workspace-to-monitor --wrap-around next'
# alt-ctrl-semicolon = 'mode service'
# alt-ctrl-esc = ['reload-config']
cmd-shift-esc = ['reload-config']

[mode.leader.binding]
g = 'mode workspace-nav'  # "go" to workspace / navigate workspaces
s = 'mode workspace-move' # "send" window to workspace  
f = 'mode window-nav'     # "focus" / find windows
m = 'mode window-move'    # "move" windows
j = 'mode window-merge'   # "join" windows together
esc = 'mode main'         # "quit" back to main (safety exit)

[mode.workspace-nav.binding]
x = ['workspace ðŸ¯±', 'mode main']
c = ['workspace ðŸ¯²', 'mode main']
d = ['workspace ðŸ¯³', 'mode main']
r = ['workspace ðŸ¯´', 'mode main']
s = ['workspace ðŸ¯µ', 'mode main']
t = ['workspace ðŸ¯¶', 'mode main']
w = ['workspace ðŸ¯·', 'mode main']
f = ['workspace ðŸ¯¸', 'mode main']
p = ['workspace ðŸ¯¹', 'mode main']
q = ['workspace next --wrap-around', 'mode main']
b = ['workspace prev --wrap-around', 'mode main']
tab = ['workspace-back-and-forth', 'mode main']
esc = 'mode main'                                 # "quit" back to main (safety exit)

[mode.workspace-move.binding]
x = ['move-node-to-workspace ðŸ¯±', 'mode main']
c = ['move-node-to-workspace ðŸ¯²', 'mode main']
d = ['move-node-to-workspace ðŸ¯³', 'mode main']
r = ['move-node-to-workspace ðŸ¯´', 'mode main']
s = ['move-node-to-workspace ðŸ¯µ', 'mode main']
t = ['move-node-to-workspace ðŸ¯¶', 'mode main']
w = ['move-node-to-workspace ðŸ¯·', 'mode main']
f = ['move-node-to-workspace ðŸ¯¸', 'mode main']
p = ['move-node-to-workspace ðŸ¯¹', 'mode main']
esc = 'mode main'                             # "quit" back to main (safety exit)

[mode.window-nav.binding]
n = ['focus left', 'mode main']
e = ['focus down', 'mode main']
i = ['focus up', 'mode main']
o = ['focus right', 'mode main']
t = ['layout tiles horizontal vertical', 'mode main']
a = ['layout accordion horizontal vertical', 'mode main']
tab = [
  'focus dfs-next --boundaries-action wrap-around-the-workspace',
  'mode main',
]
shift-tab = [
  'focus dfs-prev --boundaries-action wrap-around-the-workspace',
  'mode main',
]
esc = 'mode main' # "quit" back to main (safety exit)

[mode.window-move.binding]
n = ['move left', 'mode main']
e = ['move down', 'mode main']
i = ['move up', 'mode main']
o = ['move right', 'mode main']

minus = ['resize smart -150', 'mode main']
equal = ['resize smart +150', 'mode main']

esc = 'mode main' # "quit" back to main (safety exit)

[mode.window-merge.binding]
n = ['join-with left', 'mode main']
e = ['join-with down', 'mode main']
i = ['join-with up', 'mode main']
o = ['join-with right', 'mode main']
esc = 'mode main'                    # "quit" back to main (safety exit)

[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
if.window-title-regex-substring = 'Picture-in-Picture'
run = 'layout floating'

[workspace-to-monitor-force-assignment]
# "ðŸ¯±" = ['built-in', 'secondary']
# "ðŸ¯²" = ['built-in', 'secondary']
"ðŸ¯³" = ['built-in', 'secondary']
# "ðŸ¯´" = ['built-in', 'secondary']
# "ðŸ¯µ" = ['built-in', 'secondary']
"ðŸ¯¶" = ['built-in', 'secondary']
# "ðŸ¯·" = ['built-in', 'secondary']
# "ðŸ¯¸" = ['built-in', 'secondary']
"ðŸ¯¹" = ['built-in', 'secondary']
# "ðŸ¯°" = ['built-in', 'secondary']
# Planning = ['lg', 'built-in']
# Writing = ['lg', 'built-in']
# Messages = ['lg', 'built-in']
# 'D&D' = ['lg', 'built-in']
# Research = ['lg', 'built-in']
# Gaming = ['lg', 'built-in']
# Terminal = ['lg', 'built-in']
# Mail = ['secondary', 'main']
# Calendar = ['secondary', 'main']
# Edge = ['lg', 'built-in']
# Generic = ['lg', 'built-in']
