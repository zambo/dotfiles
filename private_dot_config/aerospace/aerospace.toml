# Start AeroSpace at login
start-at-login = true

# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []
after-startup-command = [
  'exec-and-forget borders',
  # active_color=0xffe1e3e4 inactive_color=0xff494d64 width=13.0',
]

# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
on-focus-changed = ['move-mouse window-lazy-center']

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

accordion-padding = 80
# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
default-root-container-orientation = 'auto'

# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]

inner.horizontal = 16
inner.vertical = 16
outer.left = 4
outer.bottom = 6
outer.top = [{ monitor."LG HDR 4K" = 6 }, { monitor."Sidecar Display" = 6 }, 6]
outer.right = 4

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}

[mode.main.binding]
# Main mode is only used to switch between other modes.
# Think of it as a Leader key.

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-ctrl-keypadPlus = 'mode service'
alt-ctrl-keypad = "mode window"
alt-ctrl-keypadMinus = "mode apps"
alt-ctrl-keypadMultiply = "mode workspace"

# all possible keys:
# - letters.        a, b, c, ..., z
# - numbers.        0, 1, 22, ..., keypad9
# - f-keys.         f1, f2, ..., f20
# - special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftsquarebracket, rightsquarebracket, space, enter, esc,
#                   backspace, tab
# - keypad special. keypadccimalmark, keypaddivide, keypadenter, keypadequal,
#                   keypadminus, keypadmultiply, keypadplus
# - arrows.         left, down, up, right

# all possible modifiers: cmd, alt, ctrl, shift

# all possible commands: https://nikitabobko.github.io/aerospace/commands

# see: https://nikitabobko.github.io/aerospace/commands#exec-and-forget

# see: https://nikitabobko.github.io/aeroSpace/commands#workspace
# alt-1 = 'workspace ↙'
# alt-2 = 'workspace ↓'
# alt-3 = 'workspace ↘︎'
# alt-4 = 'workspace ←'
# # alt-5 = 'workspace ⚉☻☼🟊𝟏𝟐𝟖𝟠𝟫𝟵⑨𝟿𝚨𝕬𝕭𝕮𝕯𝖆𝖇𝖈𝖉𝖊𝖋𝖌𝖍𝖠𝐀𝑨𝔞𝔄𝕬𝖆𝔸'
# alt-5 = 'workspace 11️⃣∞_𝟓_𝟝_𝟧_𝟱_𝟻_1*⃣5︎⃣'
# alt-6 = 'workspace →'
# alt-7 = 'workspace ↖︎'
# alt-0 = 'workspace 👾'

# alt-1 = 'workspace 🯱'
# alt-2 = 'workspace 🯲'
# alt-3 = 'workspace 🯳'
# alt-4 = 'workspace 🯴'
# alt-5 = 'workspace 🯵'
# alt-6 = 'workspace 🯶'
# alt-7 = 'workspace 🯷'
# alt-8 = 'workspace 🯸'
# alt-9 = 'workspace 🯹'
# alt-0 = 'workspace 🯰'
#
# alt-0 = 'workspace Ⓐ🅐🄰🅰①⓵❶⡾⡱⢬⣇⣿🡩🡡🅳🅴🅸'
# 🯰🯱🯲🯳🯴🯵🯶🯷🯸🯹0︎⃣1︎⃣9︎⃣9︎⃣8︎⃣ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩ𐄊↓↑↘↗1⃞2⃞3⃞4⃞5⃞6⃞7⃞8⃞9⃞[10]1⃞2⃞3⃞4⃞5⃞6⃞7⃞8⃞9⃞[10]1⃞2⃞➋➌⇦⃞⇨⃞⇦⃝➲2⃞9⃞

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-c = ['exec-and-forget open -a "Calendar"']
# alt-v = ['exec-and-forget open -a "Obsidian"']
# alt-w = ['exec-and-forget open -a "Zen Browser"']
# alt-t = ['exec-and-forget open -a "Ghostty"']
# alt-s = ['exec-and-forget open -a "Spotify"']
# alt-b = ['exec-and-forget open -a "Blender"']
# alt-m = ['exec-and-forget open -a "Mail"']
#
# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# colemakdh order... qwfpb, arstg, zxcdv, jluy', mneio, kh,./
# alt-ctrl-1 = 'move-node-to-workspace 🯱'
# alt-ctrl-2 = 'move-node-to-workspace 🯲'
# alt-ctrl-3 = 'move-node-to-workspace 🯳'
# alt-ctrl-4 = 'move-node-to-workspace 🯴'
# alt-ctrl-5 = 'move-node-to-workspace 🯵'
# alt-ctrl-6 = 'move-node-to-workspace 🯶'
# alt-ctrl-7 = 'move-node-to-workspace 🯷'
# alt-ctrl-8 = 'move-node-to-workspace 🯸'
# alt-ctrl-9 = 'move-node-to-workspace 🯹'
# alt-ctrl-0 = 'move-node-to-workspace 🯰'
#

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
# alt-ctrl-slash = 'layout tiles horizontal vertical'
# alt-ctrl-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
# alt-n = 'focus left'
# alt-e = 'focus down'
# alt-i = 'focus up'
# alt-o = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
# alt-ctrl-n = 'move left'
# alt-ctrl-e = 'move down'
# alt-ctrl-i = 'move up'
# alt-ctrl-o = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
# alt-ctrl-minus = 'resize smart -50'
# alt-ctrl-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# alt-ctrl-q = 'workspace next --wrap-around'
# alt-ctrl-b = 'workspace prev --wrap-around'

# alt-g = 'workspace Generic'

# Fullscreen mode
# alt-ctrl-shift-f = 'fullscreen --no-outer-gaps'
# alt-ctrl-shift-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
# alt-tab = ['focus right --boundaries-action wrap-around-the-workspace']
# alt-shift-tab = ['focus left --boundaries-action wrap-around-the-workspace']
# alt-tab = ['focus-back-and-forth']

# alt-ctrl-tab = ['workspace-back-and-forth']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
# cmd-ctrl-tab = 'move-workspace-to-monitor --wrap-around next'


[mode.workspace.binding]
esc = ['reload-config', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# No extra modifiers to handle windows.
# ESC is needed to exit this mode.
x = 'workspace 🯱'
c = 'workspace 🯲'
d = 'workspace 🯳'
r = 'workspace 🯴'
s = 'workspace 🯵'
t = 'workspace 🯶'
w = 'workspace 🯷'
f = 'workspace 🯸'
p = 'workspace 🯹'
space = 'workspace 🯰'

enter = 'fullscreen --no-outer-gaps'

# alt-ctrl-shift-n = ['join-with left', 'mode main']
# alt-ctrl-shift-e = ['join-with down', 'mode main']
# alt-ctrl-shift-i = ['join-with up', 'mode main']
# alt-ctrl-shift-o = ['join-with right', 'mode main']


[mode.window.binding]
esc = ['reload-config', 'mode main']
enter = 'fullscreen --no-outer-gaps'

t = ['layout tiles horizontal vertical', 'mode main']
a = ['layout accordion horizontal vertical', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
n = 'focus left'
e = 'focus down'
i = 'focus up'
o = 'focus right'


[mode.apps.binding]
esc = ['reload-config', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
c = ['exec-and-forget open -a "Calendar"', 'mode main']
r = ['exec-and-forget open -a "Obsidian"', 'mode main']
w = ['exec-and-forget open -a "Zen Browser"', 'mode main']
t = ['exec-and-forget open -a "Ghostty"', 'mode main']
s = ['exec-and-forget open -a "Spotify"', 'mode main']
b = ['exec-and-forget open -a "Blender"', 'mode main']
m = ['exec-and-forget open -a "Mail"', 'mode main']

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
# backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

# s = ['exec-and-forget /opt/homebrew/bin/sketchybar --reload']

# [[on-window-detected]]
# if.app-name-regex-substring = 'Idle Champions'
# run = ['layout floating', 'move-node-to-workspace 👾']
#
# [[on-window-detected]]
# if.app-id = 'com.apple.mail'
# run = 'move-node-to-workspace 🡬'
#
# [[on-window-detected]]
# if.app-id = 'com.apple.iCal'
# run = 'move-node-to-workspace 🡩'
#
# [[on-window-detected]]
# if.app-id = 'com.todoist.mac.Todoist'
# run = 'layout floating'
#
[[on-window-detected]]

if.app-id = 'app.zen-browser.zen'
if.window-title-regex-substring = 'Picture-in-Picture'
run = 'layout floating'

[[on-window-detected]]
if.app-id = "com.mitchellh.ghostty"
run = ["layout tiling"]

# [[on-window-detected]]
# if.app-id = "com.mitchellh.ghostty"
# run = ["layout tiling"]

# [[on-window-detected]]
#     if.app-id = 'com.spotify.client'
#     run = 'move-node-to-workspace Music'

# [[on-window-detected]]
#     if.app-id = 'md.obsidian'
#     run = 'move-node-to-workspace Writing'

# [[on-window-detected]]
#     if.app-id = 'net.whatsapp.WhatsApp'
#     run = 'move-node-to-workspace Messages'

# [[on-window-detected]]
#     if.app-id = 'com.mitchellh.ghostty'
#     run = 'move-node-to-workspace terminal'

# [[on-window-detected]]
#     if.app-id = 'com.microsoft.edgemac'
#     run = 'move-node-to-workspace edge'


[workspace-to-monitor-force-assignment]
# j = ['built-in', 'secondary']
# m = ['built-in', 'secondary']
# k = ['built-in', 'secondary']
# 1 = ['secondary']                        # main monitor
# 2 = ['secondary']                        # non-main monitor in case when there are only two monitors
# 3 = ['secondary']                        # case insensitive regex substring
# browser = ['lg', 'built-in']
# code = ['lg', 'built-in']
# music = ['lg', 'built-in']
# planning = ['lg', 'built-in']
# writing = ['lg', 'built-in']
# messages = ['lg', 'built-in']
# 'D&D' = ['lg', 'built-in']
# Research = ['lg', 'built-in']
# Gaming = ['lg', 'built-in']
# Terminal = ['lg', 'built-in']
# Mail = ['secondary', 'main']
# Calendar = ['secondary', 'main']
# Edge = ['lg', 'built-in']
# Generic = ['lg', 'built-in']
